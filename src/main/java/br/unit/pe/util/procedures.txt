CREATE OR REPLACE PROCEDURE CALCULA_INOVATIVIDADE() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT CAST(EXTRACT(YEAR FROM age(CURRENT_DATE,TEC.CONHECE_DESDE)) * 12 
	+ EXTRACT(MONTH FROM age(CURRENT_DATE,TEC.CONHECE_DESDE))
	AS NUMERIC(18,2)) 
	/
	(SELECT EXTRACT(YEAR FROM age(CURRENT_DATE,min(CONHECE_DESDE))) * 12 
	+ EXTRACT(MONTH FROM age(CURRENT_DATE,min(CONHECE_DESDE)))
	from tecnologia_usuario where id_tecnologia = tec.id_tecnologia) as inovatividade,
	tec.id_usuario AS id_user,tec.id_tecnologia as id_tech from tecnologia_usuario tec;
BEGIN
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE TECNOLOGIA_USUARIO
			SET INOVATIVIDADE = RS.inovatividade
			WHERE ID_USUARIO = RS.id_user
			AND ID_TECNOLOGIA = RS.id_tech;
	END LOOP;
END;
$func$ LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE CALCULA_RELEVANCIA() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT TECNOLOGIA_ID,
		   CAST(COUNT(ID_USUARIO) AS NUMERIC(18,2))/(SELECT COUNT(ID) FROM USUARIO) as RELEVANCIA
	FROM
			(SELECT ITE.TECNOLOGIA_ID, EMP.ID_USUARIO
			FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
			WHERE EMP.ID = ITE.EMPUSU_ID 
			AND COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			>= CURRENT_DATE - INTERVAL '2 YEARS'
			UNION 
			SELECT TECUSU.ID_TECNOLOGIA,TECUSU.ID_USUARIO 
			FROM TECNOLOGIA_USUARIO TECUSU
			WHERE TECUSU.ESTUDA_DESDE IS NOT NULL) as subquery
		GROUP BY TECNOLOGIA_ID;
BEGIN
	UPDATE TECNOLOGIA
		SET RELEVANCIA = NULL;
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE TECNOLOGIA
			SET RELEVANCIA = RS.RELEVANCIA
			WHERE ID = RS.TECNOLOGIA_ID;
	END LOOP;
	UPDATE TECNOLOGIA
	SET RELEVANCIA = COALESCE(RELEVANCIA,0);
END;
$func$ LANGUAGE plpgsql;



CREATE OR REPLACE PROCEDURE CALCULA_DOMINIO() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT ITE.EMPUSU_ID AS EMPUSU_ID_VAR,ITE.TECNOLOGIA_ID AS TECNOLOGIA_ID_VAR,
	EXTRACT(YEAR FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
	+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) AS EXPERIENCIA,
	((CAST(EMP.DIVERSIDADE AS NUMERIC(10,2)) + 
	 CAST(EMP.COMPLEXIDADE AS NUMERIC(10,2)) +
	 CAST(ITE.FREQUENCIA AS NUMERIC(10,2)))/3) *
	(EXTRACT(YEAR FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
	+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI)))) AS CA 
	 							  FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
									WHERE EMP.ID = ITE.EMPUSU_ID;
BEGIN
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE EMPRESA_USUARIO_ITEM
			SET CA = RS.CA,
			EXP = RS.EXPERIENCIA			
			WHERE TECNOLOGIA_ID = RS.TECNOLOGIA_ID_VAR
			AND EMPUSU_ID = RS.EMPUSU_ID_VAR;
	END LOOP;
END;
$func$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION INVERTE_ESCALA(NVAL_IN INTEGER) RETURNS INTEGER AS $func$ 
BEGIN
  IF (nVAL_IN = 1) THEN
    RETURN 5;
  ELSIF (nVAL_IN = 2) THEN
    RETURN  4;
  ELSIF (nVAL_IN = 3) THEN
    RETURN 3;
  ELSIF (nVAL_IN = 4) THEN
    RETURN 2;
  ELSIF (nVAL_IN = 5) THEN
    RETURN 1;
  ELSE
   RETURN 0;
  END IF;
END
$func$ LANGUAGE plpgsql;


CREATE OR REPLACE PROCEDURE CALCULA_DETERIORACAO() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT EMP.ID_USUARIO AS ID_USER,ITE.TECNOLOGIA_ID AS ID_TECH,
	SUM(CASE WHEN coalesce(ITE.DATA_INI,EMP.DATA_INI) > CURRENT_DATE - INTERVAL '2 YEARS' THEN
			EXTRACT(YEAR FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
			+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI)))
		ELSE
			EXTRACT(YEAR FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  CURRENT_DATE - INTERVAL '2 YEARS')) * 12 
			+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  CURRENT_DATE - INTERVAL '2 YEARS'))
	    END) AS TEMPO_TRABALHADO,
		MIN(EXTRACT(YEAR FROM AGE((SELECT COALESCE(MIN(AUX.DATA_INI),CURRENT_DATE) FROM EMPRESA_USUARIO AUX,EMPRESA_USUARIO_ITEM AUX2
		   WHERE AUX.DATA_INI > COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			AND AUX.ID = AUX2.EMPUSU_ID AND AUX2.TECNOLOGIA_ID = ITE.TECNOLOGIA_ID AND AUX.ID_USUARIO = EMP.ID_USUARIO)
			,coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE))) * 12 + EXTRACT(MONTH FROM AGE( 
			(SELECT COALESCE(MIN(AUX.DATA_INI),CURRENT_DATE) FROM EMPRESA_USUARIO AUX,EMPRESA_USUARIO_ITEM AUX2
		   WHERE AUX.DATA_INI > COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			AND AUX.ID = AUX2.EMPUSU_ID AND AUX2.TECNOLOGIA_ID = ITE.TECNOLOGIA_ID AND AUX.ID_USUARIO = EMP.ID_USUARIO
			),coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE)))
		)
		AS TEMPO_INATIVO,
		AVG((((CAST((inverte_escala(EMP.DIVERSIDADE)) AS NUMERIC(10,2)) +
			   CAST((inverte_escala(EMP.COMPLEXIDADE)) AS NUMERIC(10,2)) +
			   CAST((inverte_escala(ITE.FREQUENCIA)) AS NUMERIC(10,2)))/3) * 0.00834)) AS CALC
	FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
	WHERE EMP.ID = ITE.EMPUSU_ID
	AND coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) >= CURRENT_DATE - INTERVAL '2 YEARS'
	GROUP BY EMP.ID_USUARIO,ITE.TECNOLOGIA_ID;
BEGIN
	UPDATE EMPRESA_USUARIO_ITEM SET DET= NULL;
	FOR
	RS IN CURSOR_1 LOOP
	IF (RS.TEMPO_TRABALHADO > 24) THEN
		RS.TEMPO_TRABALHADO = 24;
	END IF;
	RS.CALC = 1-((RS.TEMPO_TRABALHADO * RS.CALC) + (5 * 0.00834 * RS.TEMPO_INATIVO));
	UPDATE EMPRESA_USUARIO_ITEM SET DET = RS.CALC
	WHERE TECNOLOGIA_ID = RS.ID_TECH
	AND EXISTS(SELECT EMPRESA_USUARIO.ID FROM EMPRESA_USUARIO 
			   WHERE EMPRESA_USUARIO_ITEM.EMPUSU_ID = EMPRESA_USUARIO.ID
			  AND EMPRESA_USUARIO.ID_USUARIO = RS.ID_USER);
	END LOOP;
	UPDATE EMPRESA_USUARIO_ITEM
	SET DET = COALESCE(DET,0);
END;
$func$ LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE CALCULA_SCORE() AS $func$
DECLARE CURSOR_1 CURSOR is
SELECT USU_ID , SUM(DOMINIO * (SELECT SUM(INOVATIVIDADE)/COUNT(*) FROM TECNOLOGIA_USUARIO WHERE ID_USUARIO = USU_ID)) AS SCORE
FROM (SELECT USU.ID USU_ID, SUM(((ITE.CA* case when ITE.DET = 0 then 0.1 else ITE.DET end) + ITE.EXP)
	 * case when TEC.RELEVANCIA = 0 then 0.01 else TEC.RELEVANCIA end) AS DOMINIO FROM 
	 EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE,TECNOLOGIA TEC,USUARIO USU
	 WHERE EMP.ID = ITE.EMPUSU_ID
	 AND TEC.ID = ITE.TECNOLOGIA_ID
	 AND USU.ID = EMP.ID_USUARIO
	 GROUP BY USU.ID
	 UNION ALL
	 SELECT USU.ID USU_ID,
		SUM((
			(SELECT EXTRACT(YEAR FROM age(COALESCE(TEC_USU.ESTUDOU_ATE,CURRENT_DATE),
										   COALESCE(TEC_USU.ESTUDA_DESDE,CURRENT_DATE))) * 12 
	+ EXTRACT(MONTH FROM age(COALESCE(TEC_USU.ESTUDOU_ATE,CURRENT_DATE),
							 COALESCE(TEC_USU.ESTUDA_DESDE,CURRENT_DATE))) * 2) 
	+ EXTRACT(YEAR FROM age(COALESCE(TEC_USU.ESTUDOU_ATE,CURRENT_DATE),
								   COALESCE(TEC_USU.ESTUDA_DESDE,CURRENT_DATE))) * 12 
	+ EXTRACT(MONTH FROM age(COALESCE(TEC_USU.ESTUDOU_ATE,CURRENT_DATE),COALESCE(TEC_USU.ESTUDA_DESDE,CURRENT_DATE)))
		)
    * case when TEC.RELEVANCIA = 0 then 0.01 else TEC.RELEVANCIA end)
            FROM USUARIO USU,
                 TECNOLOGIA_USUARIO TEC_USU,
                 TECNOLOGIA TEC       
           WHERE USU.ID = TEC_USU.ID_USUARIO
             AND TEC_USU.ID_TECNOLOGIA = TEC.ID
             AND TEC_USU.ESTUDA_DESDE IS NOT NULL
           GROUP BY USU_ID
	 ) AS SUBQUERY
GROUP BY USU_ID ORDER BY 2 DESC;	 
BEGIN
	call public.calcula_inovatividade();
	call public.calcula_relevancia();
	call public.calcula_dominio();
	call public.calcula_deterioracao();
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE USUARIO
			SET SCORE = RS.SCORE
			WHERE ID = RS.USU_ID;
	END LOOP;
END;
$func$ LANGUAGE plpgsql;