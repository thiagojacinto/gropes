CREATE OR REPLACE PROCEDURE CALCULA_INOVATIVIDADE() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT EXTRACT(YEAR FROM age(CURRENT_DATE,TEC.CONHECE_DESDE)) * 12 
	+ EXTRACT(MONTH FROM age(CURRENT_DATE,TEC.CONHECE_DESDE))
	/
	(SELECT EXTRACT(YEAR FROM age(CURRENT_DATE,min(CONHECE_DESDE))) * 12 
	+ EXTRACT(MONTH FROM age(CURRENT_DATE,min(CONHECE_DESDE)))
	from tecnologia_usuario where id_tecnologia = tec.id_tecnologia) as inovatividade,
	tec.id_usuario AS id_user,tec.id_tecnologia as id_tech from tecnologia_usuario tec;
BEGIN
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE TECNOLOGIA
			SET RELEVANCIA = RS.RELEVANCIA
			WHERE ID_USUARIO = RS.id_user
			AND ID_TECNOLOGIA = RS.id_tech;
	END LOOP;
END;
$func$ LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE CALCULA_RELEVANCIA() AS $func$
DECLARE
    --1TECNOLOGIA_ID SMALLINT;
	--1RELEVANCIA NUMERIC(18,3);
	CURSOR_1 CURSOR is
	SELECT TECNOLOGIA_ID,
	CAST(COUNT(ID_USUARIO) AS NUMERIC(18,2))/(SELECT COUNT(ID) FROM USUARIO)
		FROM
			(SELECT ITE.TECNOLOGIA_ID, EMP.ID_USUARIO
			FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
			WHERE EMP.ID = ITE.EMPUSU_ID 
			AND COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			>= CURRENT_DATE - INTERVAL '2 YEARS'
			UNION 
			SELECT TECUSU.ID_TECNOLOGIA,TECUSU.ID_USUARIO 
			FROM TECNOLOGIA_USUARIO TECUSU
			WHERE TECUSU.ESTUDA_DESDE IS NOT NULL) as RELEVANCIA
		GROUP BY TECNOLOGIA_ID;
		--INTO 
		--1TECNOLOGIA_ID,
		--1RELEVANCIA
BEGIN
	UPDATE TECNOLOGIA
		SET RELEVANCIA = NULL;
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE TECNOLOGIA
			SET RELEVANCIA = RS.RELEVANCIA
			WHERE ID = RS.TECNOLOGIA_ID;
	END LOOP;
	UPDATE TECNOLOGIA
		SET RELEVANCIA = COALESCE(RELEVANCIA,O);
END;
$func$ LANGUAGE plpgsql;



CREATE OR REPLACE PROCEDURE CALCULA_DOMINIO() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT ITE.EMPUSU_ID AS EMPUSU_ID_VAR,ITE.TECNOLOGIA_ID AS TECNOLOGIA_ID_VAR,
	EXTRACT(YEAR FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
	+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) AS EXPERIENCIA,
	((CAST(EMP.DIVERSIDADE AS NUMERIC(10,2)) + 
	 CAST(EMP.COMPLEXIDADE AS NUMERIC(10,2)) +
	 CAST(ITE.FREQUENCIA AS NUMERIC(10,2))/3) *
	EXTRACT(YEAR FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
	+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI)))) AS CA 
	 							  FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
									WHERE EMP.ID = ITE.EMPUSU_ID;
BEGIN
	FOR
	RS IN CURSOR_1 LOOP
	UPDATE EMPRESA_USUARIO_ITEM
			SET CA = RS.CA,
			EXP = RS.EXPERIENCIA			
			WHERE TECNOLOGIA_ID = RS.TECNOLOGIA_ID_VAR
			AND EMPUSU_ID = RS.EMPUSU_ID_VAR;
	END LOOP;
END;
$func$ LANGUAGE plpgsql;


	CREATE OR REPLACE PROCEDURE CALCULA_DETERIORACAO() AS $func$
DECLARE
    CURSOR_1 CURSOR is
	SELECT EMP.ID_USUARIO AS ID_USER,ITE.TECNOLOGIA_ID AS ID_TECH,
	SUM(CASE WHEN coalesce(ITE.DATA_INI,EMP.DATA_INI) > CURRENT_DATE - INTERVAL '2 YEARS' THEN
			EXTRACT(YEAR FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI))) * 12 
			+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_INI,EMP.DATA_INI,CURRENT_DATE),
								  coalesce(ITE.DATA_INI,EMP.DATA_INI)))
		ELSE
			EXTRACT(YEAR FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  CURRENT_DATE - INTERVAL '2 YEARS')) * 12 
			+ EXTRACT(MONTH FROM age(coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE),
								  CURRENT_DATE - INTERVAL '2 YEARS'))
	    END) AS TEMPO_TRABALHADO,
		MIN(EXTRACT(YEAR FROM AGE((SELECT COALESCE(MIN(AUX.DATA_INI),CURRENT_DATE) FROM EMPRESA_USUARIO AUX,EMPRESA_USUARIO_ITEM AUX2
		   WHERE AUX.DATA_INI > COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			AND AUX.ID = AUX2.EMPUSU_ID AND AUX2.TECNOLOGIA_ID = ITE.TECNOLOGIA_ID AND AUX.ID_USUARIO = EMP.ID_USUARIO)
			,coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE))) * 12 + EXTRACT(MONTH FROM AGE( 
			(SELECT COALESCE(MIN(AUX.DATA_INI),CURRENT_DATE) FROM EMPRESA_USUARIO AUX,EMPRESA_USUARIO_ITEM AUX2
		   WHERE AUX.DATA_INI > COALESCE(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE) 
			AND AUX.ID = AUX2.EMPUSU_ID AND AUX2.TECNOLOGIA_ID = ITE.TECNOLOGIA_ID AND AUX.ID_USUARIO = EMP.ID_USUARIO
			),coalesce(ITE.DATA_FIM,EMP.DATA_FIM,CURRENT_DATE)))
		)
		AS TEMPO_INATIVO
	FROM EMPRESA_USUARIO EMP,EMPRESA_USUARIO_ITEM ITE
									WHERE EMP.ID = ITE.EMPUSU_ID;
BEGIN
	FOR
	RS IN CURSOR_1 LOOP
	END LOOP;
END;
$func$ LANGUAGE plpgsql;